[package]
name = "wave-rs"
version = "0.1.0"
authors = ["etiennecollin <collin.etienne.contact@gmail.com>"]
repository = "https://github.com/etiennecollin/wave-rs"
edition = "2021"
license = "MIT"

[features]
default = [
    "stm32u5a5zj",
    "defmt",
]

stm32u5a5zj = [
    "embassy-stm32/stm32u5a5zj"
]

defmt = [
    "embassy-net/defmt",
    "embassy-stm32/defmt",
    "embassy-time/defmt-timestamp-uptime-us",
    "embassy-usb/defmt",
    "heapless/defmt-03",
    "panic-probe/print-defmt",
    "usbd-human-interface-device/defmt",
]

[dependencies]
embassy-executor = { version = "0.7.0", features = ["nightly", "arch-cortex-m", "executor-thread", "executor-interrupt"] }
embassy-stm32 = { version = "0.2.0", features = ["memory-x", "time", "time-driver-any", "exti"]  }
embassy-time = { version = "0.4.0", features = ["tick-hz-32_768"] }

embassy-embedded-hal = { version = "0.3.0" }
embassy-futures = { version = "0.1.1" }
embassy-net = { version = "0.6.0", features = ["tcp", "dhcpv4", "dhcpv4-hostname"] }
embassy-sync = { version = "0.6.2" }
embassy-usb = { version = "0.4.0", features = ["max-interface-count-6", "max-handler-count-6"] }

defmt = { version = "0.3.10" }
defmt-rtt = { version = "0.4.1" }
panic-probe = { version = "0.3.2" }

cortex-m = { version = "0.7.7", features = ["inline-asm", "critical-section-single-core", "linker-plugin-lto"] }
cortex-m-rt = "0.7.5"

heapless = "0.8.0"
packed_struct = { version = "0.10.1", default-features = false }
static_cell = "2.1.0"
usbd-human-interface-device = "0.5.1"

[profile.release]
codegen-units = 1 # LLVM can perform better optimizations using a single thread
debug = true
debug-assertions = false
incremental = false
lto = "fat"
opt-level = "s"
overflow-checks = false

[profile.dev]
opt-level = "z"
debug = true
